<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>LeetCode on QuwnyBlog</title>
    <link>https://quwny.github.io/categories/leetcode/</link>
    <description>Recent content in LeetCode on QuwnyBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 28 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://quwny.github.io/categories/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 每日一题</title>
      <link>https://quwny.github.io/posts/leetcode-daily/</link>
      <pubDate>Thu, 28 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://quwny.github.io/posts/leetcode-daily/</guid>
      <description>因为不是写题解的模式，感觉这样记录每日一题意义不大。停更！
可以访问 我的力扣主页 查看题解。
890. 查找和替换模式 tag: 字符串、模式匹配、中等
/** * 解题思路：建立双向映射规则，单词与模式进行匹配。 * 单词只包含小写字母。 */ class Solution { public List&amp;lt;String&amp;gt; findAndReplacePattern(String[] words, String pattern) { List&amp;lt;String&amp;gt; res = new ArrayList&amp;lt;&amp;gt;(); // 存储结果 char[] pts = pattern.toCharArray(); // 转换为字符数组 // 保存映射规则 char[] rules1 = new char[26]; char[] rules2 = new char[26]; for (String word : words) { Arrays.fill(rules1, &amp;#39;\0&amp;#39;); Arrays.fill(rules2, &amp;#39;\0&amp;#39;); int n = word.length(); for (int i = 0; i &amp;lt; n; ++i) { char ch = word.</description>
    </item>
    
  </channel>
</rss>
